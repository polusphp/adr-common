name: Unit test

on:
  - push
  - pull_request

env:
  COMPOSER_FLAGS: "--ansi --no-interaction --no-progress --prefer-dist"

jobs:
    tests:
        name: "Tests"
        runs-on: ubuntu-latest
        continue-on-error: ${{ matrix.experimental }}
        strategy:
            fail-fast: false
            matrix:
                dependencies:
                    - "lowest"
                    - "highest"
                php-version:
                    - "8.2"
                    - "8.3"
                experimental:
                    - false
                include:
                    - php-version: "8.4"
                      composer-options: "--ignore-platform-reqs"
                      experimental: true
                      dependencies: "highest"

        steps:
            - name: "Set up PHP"
              uses: "shivammathur/setup-php@v2"
              with:
                  coverage: "none"
                  php-version: "${{ matrix.php-version }}"
                  extensions: "ds"
                  tools: "composer:v2"

            - name: "Checkout"
              uses: "actions/checkout@v4"

            - name: "Install lowest dependencies"
              if: ${{ matrix.dependencies == 'lowest' }}
              run: "composer update --prefer-lowest ${{ env.COMPOSER_FLAGS }} ${{ matrix.composer-options }}"

            - name: "Install highest dependencies"
              if: ${{ matrix.dependencies == 'highest' }}
              run: "composer update ${{ env.COMPOSER_FLAGS }} ${{ matrix.composer-options }}"

            - name: "Run tests"
              run: "./vendor/bin/phpunit -c phpunit.xml.dist"


    coverage:
        name: Coverage
        runs-on: ubuntu-latest
        steps:
            -   name: "Install PHP"
                uses: "shivammathur/setup-php@v2"
                with:
                    coverage: "xdebug"
                    tools: "composer:v2"
                    php-version: '8.2'

            - name: "Checkout"
              uses: "actions/checkout@v4"

            - name: "Install latest dependencies"
              run: "composer update ${{ env.COMPOSER_FLAGS }}"

            - name: "Run tests with coverage"
              run: "./vendor/bin/phpunit --coverage-clover build/logs/clover.xml -c phpunit.xml.dist"

            - name: "Upload coverage results to Coveralls"
              env:
                  COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  composer global require php-coveralls/php-coveralls
                  php-coveralls --coverage_clover=build/logs/clover.xml -v
